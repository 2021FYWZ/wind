<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd ">
    <!--  配置文件,主要配置和业务逻辑有关的-->


    <!--  解决乱码  Content-Type: text/plain;charset=ISO-8859-1  -->
    <!--    <bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
    <!--        <property name="supportedMediaTypes">-->
    <!--            <list>-->
    <!--                <value>text/plain;charset=UTF-8</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--    </bean>-->


    <!--    扫描包  除了控制器以外的所有-->
    <context:component-scan base-package="com.wind">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--    引入配置文件-->
    <context:property-placeholder location="classpath:dbConfig.properties"/>
    <!--    destroy-method="close"  注销区东程序 防止内存泄漏   -->
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.class}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--================== 配置和MyBatis的整合=============== -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定mybatis全局配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatisConfig.xml"/>
        <property name="dataSource" ref="pooledDataSource"/>
        <!-- 指定mybatis，mapper文件的位置 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有dao接口的实现，加入到ioc容器中 -->
        <property name="basePackage" value="com.wind.dao"/>
        <!--        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
    </bean>

    <!-- 配置一个可以执行批量(select，update等。。。)的sqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <!-- 将defaultExecutorType配置为BATCH，可以批量更新操作缓存SQL以提高性能，
                但是有个缺陷就是无法获取update、delete返回的行数。-->
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>
    <!--=============================================  -->

    <!--     实现的接口放到ioc中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--   扫描接口-->
        <property name="basePackage" value="com.wind.dao"/>
    </bean>

    <!--    事务控制    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--   控制的数据源-->
        <property name="dataSource" ref="pooledDataSource"/>
    </bean>
    <!--  开启基于注解的事务     -->
    <aop:config>
        <!--  切入点表达式-->
        <aop:pointcut id="txPoint" expression="execution(* com.wind.service..*(..))"/>
        <!--  配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    <!--   事务增强,切入方法    -->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--   所有方法都是事务方法-->
            <tx:method name="*"/>
            <!--   认为是获取的方法，只读-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

</beans>